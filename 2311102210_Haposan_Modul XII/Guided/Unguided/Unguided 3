package main

import (
    "fmt"
)

const nMax int = 7919

type Buku struct {
    id, judul, penulis, penerbit string
    eksemplar, tahun, rating     int
}

type DaftarBuku [nMax]Buku

func DaftarkanBuku(daftar_buku *DaftarBuku, n int) {
    fmt.Println("Masukkan data buku di setiap baris (id judul penulis penerbit eksemplar tahun rating):")
    for i := 0; i < n; i++ {
        fmt.Scan(&daftar_buku[i].id, &daftar_buku[i].judul, &daftar_buku[i].penulis, &daftar_buku[i].penerbit, &daftar_buku[i].eksemplar, &daftar_buku[i].tahun, &daftar_buku[i].rating)
    }
}

func CetakTerfavorit(daftar_buku DaftarBuku, n int) {
    var buku_terfavorit Buku = daftar_buku[0]
    for i := 1; i < n; i++ {
        if buku_terfavorit.rating < daftar_buku[i].rating {
            buku_terfavorit = daftar_buku[i]
        }
    }
    fmt.Println("Buku terfavorit adalah buku dengan judul:", buku_terfavorit.judul)
}

func UrutBukuBerdasarkanRating(daftar_buku *DaftarBuku, n int) {
    for i := 0; i < n-1; i++ {
        idxMax := i
        for j := i + 1; j < n; j++ {
            if daftar_buku[j].rating > daftar_buku[idxMax].rating {
                idxMax = j
            }
        }
        daftar_buku[i], daftar_buku[idxMax] = daftar_buku[idxMax], daftar_buku[i]
    }
}

func Cetak5Terbaru(daftar_buku DaftarBuku, n int) {
    fmt.Println("5 Buku dengan rating tertinggi:")
    for i := 0; i < 5 && i < n; i++ {
        fmt.Printf("%d. %s, rating: %d\n", i+1, daftar_buku[i].judul, daftar_buku[i].rating)
    }
}

func CariBuku(daftar_buku DaftarBuku, n, rating int) {
    ditemukan := false
    bottom, top := 0, n-1

    for bottom <= top {
        middle := (bottom + top) / 2
        if daftar_buku[middle].rating == rating {
            ditemukan = true
            fmt.Println("Buku dengan rating", rating, ":")
            fmt.Println(daftar_buku[middle].judul)

            // Cek buku-buku di sekitarnya dengan rating yang sama
            for i := middle - 1; i >= 0 && daftar_buku[i].rating == rating; i-- {
                fmt.Println(daftar_buku[i].judul)
            }
            for i := middle + 1; i < n && daftar_buku[i].rating == rating; i++ {
                fmt.Println(daftar_buku[i].judul)
            }
            break
        } else if daftar_buku[middle].rating < rating {
            bottom = middle + 1
        } else {
            top = middle - 1
        }
    }

    if !ditemukan {
        fmt.Println("Buku dengan rating", rating, "tidak ditemukan")
    }
}

func identitas() {
    fmt.Println("=======================================")
    fmt.Println("Nama :Haposan Felix Marcel Siregar")
    fmt.Println("NIM:2311102210")
fmt.Println("=======================================")
}
func main() {
    identitas()
    
    var daftar_buku DaftarBuku
    var n int

    fmt.Print("Masukkan jumlah buku (n): ")
    fmt.Scan(&n)

    DaftarkanBuku(&daftar_buku, n)
    UrutBukuBerdasarkanRating(&daftar_buku, n)

    fmt.Println()
    CetakTerfavorit(daftar_buku, n)
    fmt.Println()
    Cetak5Terbaru(daftar_buku, n)

    var rating int
    fmt.Print("Masukkan rating buku yang dicari: ")
    fmt.Scan(&rating)
    CariBuku(daftar_buku, n, rating)
}

